GitHub 添加 SSH keys
首先在本地创建 SSH Keys
$ ssh-keygen -t rsa -C "18817801185@163.com"

后面的邮箱即为 github 注册邮箱，之后会要求确认路径和输入密码，一路回车就行。
成功的话会在 ~/ 下生成 .ssh文件夹，进去，打开 id_rsa.pub，复制里面的key。
复制全部内容，打开 GitHub 主页，左侧选择 SSH and GPG Keys， 点击 Add SSH Keys，然后输入名称，并将复制的内容粘贴过来，添加即可。

验证 SSH Keys 是否添加成功
$ ssh -T git@github.com

如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。
接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。

 $ git config --global user.name 'wangxi'
 $ git config --global user.email 18817801185@163.com

删除文档
find . name ".git" | xargs rm -Rf
下载远程仓库
git clone git@github.com:westboycome/study.git
上传本地仓库到服务器
git remote add origin git@github.com:westboycome/study.git
提交更新
git add .
git commit -m ""
git push -u origin master

git pull 更新
git pull --rebase origin master 进行代码合并

git config --global user.name ""
git config --global user.email ""
 gti clone
 git init
 git status
 git diff --cached 看看缓存区中哪些文件被修改了
 git branch命令可以查看当前的分支列表
 git branch name 创建分支
 git checkout 分支名可以切换到其他分支
 echo "update" >> file 修改文件内容 追加
 git merge -m "" 分支名  令来合并experimental到主线分支master
 git branch -d experimental 删除分支
 git reset --hard HEAD^ 撤销合并
 git log --stat 打印详细的提交记录
 git log --pretty=oneline
 git log --pretty=short
 git log --graph 选项可以可视化你的提交图
 git log --topo-order 日志排序
 
 git diff experimental --stat git diff test --stat
 git pull /tmp/myrepo master 这就把myrepo的主分支合并到了gitproject的当前分支里了
 git remote add myrepo /tmp/myrepo 定义它们的缩写
 
 git rebase origin
  git grep -n xmmap 搜索
  git grep --name-only xmmap 只显示文件名
 -------------- 
	git init
　　git add .
　　git commit -m 'first_commit'
　　git remote add origin https://github.com/findingsea/myRepoForBlog.git
　　git push origin master

如果执行git remote add origin https://github.com/findingsea/myRepoForBlog.git，出现错误：
fatal: remote origin already exists
则执行以下语句：git remote rm origin

再往后执行git remote add origin https://github.com/findingsea/myRepoForBlog.git 即可。

在执行git push origin master时，报错：
error:failed to push som refs to.......
 
则执行以下语句：
git pull origin master


更新
